@startuml classes
set namespaceSeparator none
class "spacerover.obstacle.Obstacle" as spacerover.obstacle.Obstacle {
  image
  pygame_wrapper
  rect
  type : type
  draw(screen)
}
class "spacerover.pygame_wrapper.PygameWrapper" as spacerover.pygame_wrapper.PygameWrapper {
  Coordinate : Union
  key_a
  key_d
  key_down
  key_left
  key_right
  key_s
  key_up
  key_w
  Clock()
  Rect(left: float, top: float, width: float, height: float)
  display_flip()
  display_set_mode(size: Coordinate)
  draw_rect(color, rect, width: int)
  get_event()
  get_event_type_quit()
  get_key_pressed()
  load_image(image_path: str)
  quit()
  rotate_image(image, angle)
  set_window_caption(window_title: str)
  transform_background_image(image, factor)
  transform_image(image, factor)
}
class "spacerover.root_window_pygame.RootWindowPyGame" as spacerover.root_window_pygame.RootWindowPyGame {
  background_image
  background_image
  cols : int
  obstacles : list
  obstacles_coordinates : list
  pygame_wrapper
  rover
  rows : int
  screen
  screen_height
  screen_width
  window_title
  window_title
  load_obstacles()
  open()
}
class "spacerover.rover.Rover" as spacerover.rover.Rover {
  direction
  directions : directions
  image
  pygame_wrapper
  rect
  speed : int
  keys_move_down_pressed(keys)
  keys_move_left_pressed(keys)
  keys_move_right_pressed(keys)
  keys_move_up_pressed(keys)
  listen_to_movement(obstacles_coordinates)
  move_down(collide_list)
  move_left(collide_list)
  move_possible(collide_list, new_position)
  move_right(collide_list)
  move_up(collide_list)
  rotate_image_down()
  rotate_image_left()
  rotate_image_right()
  rotate_image_up()
}
@enduml
